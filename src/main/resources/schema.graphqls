type Segment {
    id: ID!
    name: String!
    validFrom: String
    validTo: String
}

type Customer {
    id: ID!
    name: String!
    profile: Profile
    segments: [Segment]
}

type Profile {
    id: ID!
    age: Int
    address: String
    city: String
    state: String
    zipcode: String
}

type Query {
    allSegments: [Segment]
    segments(customerId: ID!): [Segment]
    currentSegments(customerId: ID!): [Segment]
    customer(customerId: ID!): Customer
}

type Mutation {
    createSegment(id: ID!, name: String!): Segment
    createCustomer(customerId: ID!, name: String! segments: [ID]): Customer
    refreshSegments(customerId: ID!, segments: [ID]): Customer
}

schema {
    query: Query
    mutation: Mutation
}